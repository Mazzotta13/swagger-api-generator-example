/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.opentech.acsemv3dsProxyApiClient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * CheckAuthResultWebResponse
 */


public class CheckAuthResultWebResponse {
  /**
   * Gets or Sets transactionStatus
   */
  public enum TransactionStatusEnum {
    AUTHENTICATED("AUTHENTICATED"),
    NOT_AUTHENTICATED("NOT_AUTHENTICATED"),
    CHALLENGE_NEEDED("CHALLENGE_NEEDED"),
    AUTHENTICATION_ATTEMPT_GENERATED("AUTHENTICATION_ATTEMPT_GENERATED"),
    UNABLE_TO_AUTHENTICATE("UNABLE_TO_AUTHENTICATE"),
    REJECT("REJECT"),
    DECOUPLED("DECOUPLED"),
    INFORMATIONAL("INFORMATIONAL");

    private String value;

    TransactionStatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TransactionStatusEnum fromValue(String text) {
      for (TransactionStatusEnum b : TransactionStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("transactionStatus")
  private TransactionStatusEnum transactionStatus = null;

  /**
   * Gets or Sets transactionStatusReason
   */
  public enum TransactionStatusReasonEnum {
    CARD_AUTHENTICATION_FAILED("CARD_AUTHENTICATION_FAILED"),
    UNKNOWN_DEVICE("UNKNOWN_DEVICE"),
    UNSUPPORTED_DEVICE("UNSUPPORTED_DEVICE"),
    EXCEEDS_AUTHENTICATION_LIMIT("EXCEEDS_AUTHENTICATION_LIMIT"),
    EXPIRED_CARD("EXPIRED_CARD"),
    INVALID_CARD_NUMBER("INVALID_CARD_NUMBER"),
    INVALID_TRANSACTION("INVALID_TRANSACTION"),
    NO_CARD_RECORD("NO_CARD_RECORD"),
    SECURITY_FAILURE("SECURITY_FAILURE"),
    STOLEN_CARD("STOLEN_CARD"),
    SUSPECTED_FRAUD("SUSPECTED_FRAUD"),
    TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER("TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"),
    CARDHOLDER_NOT_ENROLLED_IN_SERVICE("CARDHOLDER_NOT_ENROLLED_IN_SERVICE"),
    TRANSACTION_TIMED_OUT_AT_THE_ACS("TRANSACTION_TIMED_OUT_AT_THE_ACS"),
    LOW_CONFIDENCE("LOW_CONFIDENCE"),
    MEDIUM_CONFIDENCE("MEDIUM_CONFIDENCE"),
    HIGH_CONFIDENCE("HIGH_CONFIDENCE"),
    VERY_HIGH_CONFIDENCE("VERY_HIGH_CONFIDENCE"),
    EXCEEDS_ACS_MAXIMUM_CHALLENGES("EXCEEDS_ACS_MAXIMUM_CHALLENGES"),
    NON_PAYMENT_TRANSACTION_NOT_SUPPORTED("NON_PAYMENT_TRANSACTION_NOT_SUPPORTED"),
    THREE_RI_TRANSACTION_NOT_SUPPORTED("THREE_RI_TRANSACTION_NOT_SUPPORTED");

    private String value;

    TransactionStatusReasonEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TransactionStatusReasonEnum fromValue(String text) {
      for (TransactionStatusReasonEnum b : TransactionStatusReasonEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("transactionStatusReason")
  private TransactionStatusReasonEnum transactionStatusReason = null;

  public CheckAuthResultWebResponse transactionStatus(TransactionStatusEnum transactionStatus) {
    this.transactionStatus = transactionStatus;
    return this;
  }

   /**
   * Get transactionStatus
   * @return transactionStatus
  **/
  @Schema(description = "")
  public TransactionStatusEnum getTransactionStatus() {
    return transactionStatus;
  }

  public void setTransactionStatus(TransactionStatusEnum transactionStatus) {
    this.transactionStatus = transactionStatus;
  }

  public CheckAuthResultWebResponse transactionStatusReason(TransactionStatusReasonEnum transactionStatusReason) {
    this.transactionStatusReason = transactionStatusReason;
    return this;
  }

   /**
   * Get transactionStatusReason
   * @return transactionStatusReason
  **/
  @Schema(description = "")
  public TransactionStatusReasonEnum getTransactionStatusReason() {
    return transactionStatusReason;
  }

  public void setTransactionStatusReason(TransactionStatusReasonEnum transactionStatusReason) {
    this.transactionStatusReason = transactionStatusReason;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckAuthResultWebResponse checkAuthResultWebResponse = (CheckAuthResultWebResponse) o;
    return Objects.equals(this.transactionStatus, checkAuthResultWebResponse.transactionStatus) &&
        Objects.equals(this.transactionStatusReason, checkAuthResultWebResponse.transactionStatusReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionStatus, transactionStatusReason);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckAuthResultWebResponse {\n");
    
    sb.append("    transactionStatus: ").append(toIndentedString(transactionStatus)).append("\n");
    sb.append("    transactionStatusReason: ").append(toIndentedString(transactionStatusReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
