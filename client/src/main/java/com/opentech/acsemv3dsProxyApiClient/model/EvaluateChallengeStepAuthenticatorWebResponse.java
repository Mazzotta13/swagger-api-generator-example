/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.opentech.acsemv3dsProxyApiClient.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * EvaluateChallengeStepAuthenticatorWebResponse
 */

public class EvaluateChallengeStepAuthenticatorWebResponse {
  @JsonProperty("requestWhitelist")
  private Boolean requestWhitelist = null;

  @JsonProperty("result")
  private String result = null;

  /**
   * Gets or Sets transactionStatusReason
   */
  public enum TransactionStatusReasonEnum {
    CARD_AUTHENTICATION_FAILED("CARD_AUTHENTICATION_FAILED"),
    
    UNKNOWN_DEVICE("UNKNOWN_DEVICE"),
    
    UNSUPPORTED_DEVICE("UNSUPPORTED_DEVICE"),
    
    EXCEEDS_AUTHENTICATION_LIMIT("EXCEEDS_AUTHENTICATION_LIMIT"),
    
    EXPIRED_CARD("EXPIRED_CARD"),
    
    INVALID_CARD_NUMBER("INVALID_CARD_NUMBER"),
    
    INVALID_TRANSACTION("INVALID_TRANSACTION"),
    
    NO_CARD_RECORD("NO_CARD_RECORD"),
    
    SECURITY_FAILURE("SECURITY_FAILURE"),
    
    STOLEN_CARD("STOLEN_CARD"),
    
    SUSPECTED_FRAUD("SUSPECTED_FRAUD"),
    
    TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER("TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"),
    
    CARDHOLDER_NOT_ENROLLED_IN_SERVICE("CARDHOLDER_NOT_ENROLLED_IN_SERVICE"),
    
    TRANSACTION_TIMED_OUT_AT_THE_ACS("TRANSACTION_TIMED_OUT_AT_THE_ACS"),
    
    LOW_CONFIDENCE("LOW_CONFIDENCE"),
    
    MEDIUM_CONFIDENCE("MEDIUM_CONFIDENCE"),
    
    HIGH_CONFIDENCE("HIGH_CONFIDENCE"),
    
    VERY_HIGH_CONFIDENCE("VERY_HIGH_CONFIDENCE"),
    
    EXCEEDS_ACS_MAXIMUM_CHALLENGES("EXCEEDS_ACS_MAXIMUM_CHALLENGES"),
    
    NON_PAYMENT_TRANSACTION_NOT_SUPPORTED("NON_PAYMENT_TRANSACTION_NOT_SUPPORTED"),
    
    THREE_RI_TRANSACTION_NOT_SUPPORTED("THREE_RI_TRANSACTION_NOT_SUPPORTED");

    private String value;

    TransactionStatusReasonEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TransactionStatusReasonEnum fromValue(String text) {
      for (TransactionStatusReasonEnum b : TransactionStatusReasonEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("transactionStatusReason")
  private TransactionStatusReasonEnum transactionStatusReason = null;

  public EvaluateChallengeStepAuthenticatorWebResponse requestWhitelist(Boolean requestWhitelist) {
    this.requestWhitelist = requestWhitelist;
    return this;
  }

   /**
   * Get requestWhitelist
   * @return requestWhitelist
  **/
  @ApiModelProperty(value = "")
  public Boolean isRequestWhitelist() {
    return requestWhitelist;
  }

  public void setRequestWhitelist(Boolean requestWhitelist) {
    this.requestWhitelist = requestWhitelist;
  }

  public EvaluateChallengeStepAuthenticatorWebResponse result(String result) {
    this.result = result;
    return this;
  }

   /**
   * Get result
   * @return result
  **/
  @ApiModelProperty(value = "")
  public String getResult() {
    return result;
  }

  public void setResult(String result) {
    this.result = result;
  }

  public EvaluateChallengeStepAuthenticatorWebResponse transactionStatusReason(TransactionStatusReasonEnum transactionStatusReason) {
    this.transactionStatusReason = transactionStatusReason;
    return this;
  }

   /**
   * Get transactionStatusReason
   * @return transactionStatusReason
  **/
  @ApiModelProperty(value = "")
  public TransactionStatusReasonEnum getTransactionStatusReason() {
    return transactionStatusReason;
  }

  public void setTransactionStatusReason(TransactionStatusReasonEnum transactionStatusReason) {
    this.transactionStatusReason = transactionStatusReason;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EvaluateChallengeStepAuthenticatorWebResponse evaluateChallengeStepAuthenticatorWebResponse = (EvaluateChallengeStepAuthenticatorWebResponse) o;
    return Objects.equals(this.requestWhitelist, evaluateChallengeStepAuthenticatorWebResponse.requestWhitelist) &&
        Objects.equals(this.result, evaluateChallengeStepAuthenticatorWebResponse.result) &&
        Objects.equals(this.transactionStatusReason, evaluateChallengeStepAuthenticatorWebResponse.transactionStatusReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestWhitelist, result, transactionStatusReason);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EvaluateChallengeStepAuthenticatorWebResponse {\n");
    
    sb.append("    requestWhitelist: ").append(toIndentedString(requestWhitelist)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    transactionStatusReason: ").append(toIndentedString(transactionStatusReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

