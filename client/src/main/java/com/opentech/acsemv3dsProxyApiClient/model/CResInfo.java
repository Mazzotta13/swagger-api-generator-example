/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.opentech.acsemv3dsProxyApiClient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.opentech.acsemv3dsProxyApiClient.model.Mapstringstring;
import com.opentech.acsemv3dsProxyApiClient.model.ThreeDSImage;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * CResInfo
 */


public class CResInfo {
  @JsonProperty("acsHTML")
  private String acsHTML = null;

  @JsonProperty("acsUiType")
  private String acsUiType = null;

  @JsonProperty("challengeAddInfo")
  private String challengeAddInfo = null;

  @JsonProperty("challengeCompletionInd")
  private String challengeCompletionInd = null;

  @JsonProperty("challengeInfoHeader")
  private String challengeInfoHeader = null;

  @JsonProperty("challengeInfoLabel")
  private String challengeInfoLabel = null;

  @JsonProperty("challengeInfoText")
  private String challengeInfoText = null;

  @JsonProperty("challengeInfoTextIndicator")
  private String challengeInfoTextIndicator = null;

  @JsonProperty("challengeSelectInfo")
  private List<Mapstringstring> challengeSelectInfo = null;

  @JsonProperty("expandInfoLabel")
  private String expandInfoLabel = null;

  @JsonProperty("expandInfoText")
  private String expandInfoText = null;

  @JsonProperty("issuerImage")
  private ThreeDSImage issuerImage = null;

  @JsonProperty("oobAppLabel")
  private String oobAppLabel = null;

  @JsonProperty("oobAppURL")
  private String oobAppURL = null;

  @JsonProperty("oobContinueLabel")
  private String oobContinueLabel = null;

  @JsonProperty("psImage")
  private ThreeDSImage psImage = null;

  @JsonProperty("resendInformationLabel")
  private String resendInformationLabel = null;

  @JsonProperty("submitAuthenticationLabel")
  private String submitAuthenticationLabel = null;

  @JsonProperty("transStatus")
  private String transStatus = null;

  @JsonProperty("whitelistingInfoText")
  private String whitelistingInfoText = null;

  @JsonProperty("whyInfoLabel")
  private String whyInfoLabel = null;

  @JsonProperty("whyInfoText")
  private String whyInfoText = null;

  public CResInfo acsHTML(String acsHTML) {
    this.acsHTML = acsHTML;
    return this;
  }

   /**
   * Get acsHTML
   * @return acsHTML
  **/
  @Schema(description = "")
  public String getAcsHTML() {
    return acsHTML;
  }

  public void setAcsHTML(String acsHTML) {
    this.acsHTML = acsHTML;
  }

  public CResInfo acsUiType(String acsUiType) {
    this.acsUiType = acsUiType;
    return this;
  }

   /**
   * Get acsUiType
   * @return acsUiType
  **/
  @Schema(description = "")
  public String getAcsUiType() {
    return acsUiType;
  }

  public void setAcsUiType(String acsUiType) {
    this.acsUiType = acsUiType;
  }

  public CResInfo challengeAddInfo(String challengeAddInfo) {
    this.challengeAddInfo = challengeAddInfo;
    return this;
  }

   /**
   * Get challengeAddInfo
   * @return challengeAddInfo
  **/
  @Schema(description = "")
  public String getChallengeAddInfo() {
    return challengeAddInfo;
  }

  public void setChallengeAddInfo(String challengeAddInfo) {
    this.challengeAddInfo = challengeAddInfo;
  }

  public CResInfo challengeCompletionInd(String challengeCompletionInd) {
    this.challengeCompletionInd = challengeCompletionInd;
    return this;
  }

   /**
   * Get challengeCompletionInd
   * @return challengeCompletionInd
  **/
  @Schema(description = "")
  public String getChallengeCompletionInd() {
    return challengeCompletionInd;
  }

  public void setChallengeCompletionInd(String challengeCompletionInd) {
    this.challengeCompletionInd = challengeCompletionInd;
  }

  public CResInfo challengeInfoHeader(String challengeInfoHeader) {
    this.challengeInfoHeader = challengeInfoHeader;
    return this;
  }

   /**
   * Get challengeInfoHeader
   * @return challengeInfoHeader
  **/
  @Schema(description = "")
  public String getChallengeInfoHeader() {
    return challengeInfoHeader;
  }

  public void setChallengeInfoHeader(String challengeInfoHeader) {
    this.challengeInfoHeader = challengeInfoHeader;
  }

  public CResInfo challengeInfoLabel(String challengeInfoLabel) {
    this.challengeInfoLabel = challengeInfoLabel;
    return this;
  }

   /**
   * Get challengeInfoLabel
   * @return challengeInfoLabel
  **/
  @Schema(description = "")
  public String getChallengeInfoLabel() {
    return challengeInfoLabel;
  }

  public void setChallengeInfoLabel(String challengeInfoLabel) {
    this.challengeInfoLabel = challengeInfoLabel;
  }

  public CResInfo challengeInfoText(String challengeInfoText) {
    this.challengeInfoText = challengeInfoText;
    return this;
  }

   /**
   * Get challengeInfoText
   * @return challengeInfoText
  **/
  @Schema(description = "")
  public String getChallengeInfoText() {
    return challengeInfoText;
  }

  public void setChallengeInfoText(String challengeInfoText) {
    this.challengeInfoText = challengeInfoText;
  }

  public CResInfo challengeInfoTextIndicator(String challengeInfoTextIndicator) {
    this.challengeInfoTextIndicator = challengeInfoTextIndicator;
    return this;
  }

   /**
   * Get challengeInfoTextIndicator
   * @return challengeInfoTextIndicator
  **/
  @Schema(description = "")
  public String getChallengeInfoTextIndicator() {
    return challengeInfoTextIndicator;
  }

  public void setChallengeInfoTextIndicator(String challengeInfoTextIndicator) {
    this.challengeInfoTextIndicator = challengeInfoTextIndicator;
  }

  public CResInfo challengeSelectInfo(List<Mapstringstring> challengeSelectInfo) {
    this.challengeSelectInfo = challengeSelectInfo;
    return this;
  }

  public CResInfo addChallengeSelectInfoItem(Mapstringstring challengeSelectInfoItem) {
    if (this.challengeSelectInfo == null) {
      this.challengeSelectInfo = new ArrayList<Mapstringstring>();
    }
    this.challengeSelectInfo.add(challengeSelectInfoItem);
    return this;
  }

   /**
   * Get challengeSelectInfo
   * @return challengeSelectInfo
  **/
  @Schema(description = "")
  public List<Mapstringstring> getChallengeSelectInfo() {
    return challengeSelectInfo;
  }

  public void setChallengeSelectInfo(List<Mapstringstring> challengeSelectInfo) {
    this.challengeSelectInfo = challengeSelectInfo;
  }

  public CResInfo expandInfoLabel(String expandInfoLabel) {
    this.expandInfoLabel = expandInfoLabel;
    return this;
  }

   /**
   * Get expandInfoLabel
   * @return expandInfoLabel
  **/
  @Schema(description = "")
  public String getExpandInfoLabel() {
    return expandInfoLabel;
  }

  public void setExpandInfoLabel(String expandInfoLabel) {
    this.expandInfoLabel = expandInfoLabel;
  }

  public CResInfo expandInfoText(String expandInfoText) {
    this.expandInfoText = expandInfoText;
    return this;
  }

   /**
   * Get expandInfoText
   * @return expandInfoText
  **/
  @Schema(description = "")
  public String getExpandInfoText() {
    return expandInfoText;
  }

  public void setExpandInfoText(String expandInfoText) {
    this.expandInfoText = expandInfoText;
  }

  public CResInfo issuerImage(ThreeDSImage issuerImage) {
    this.issuerImage = issuerImage;
    return this;
  }

   /**
   * Get issuerImage
   * @return issuerImage
  **/
  @Schema(description = "")
  public ThreeDSImage getIssuerImage() {
    return issuerImage;
  }

  public void setIssuerImage(ThreeDSImage issuerImage) {
    this.issuerImage = issuerImage;
  }

  public CResInfo oobAppLabel(String oobAppLabel) {
    this.oobAppLabel = oobAppLabel;
    return this;
  }

   /**
   * Get oobAppLabel
   * @return oobAppLabel
  **/
  @Schema(description = "")
  public String getOobAppLabel() {
    return oobAppLabel;
  }

  public void setOobAppLabel(String oobAppLabel) {
    this.oobAppLabel = oobAppLabel;
  }

  public CResInfo oobAppURL(String oobAppURL) {
    this.oobAppURL = oobAppURL;
    return this;
  }

   /**
   * Get oobAppURL
   * @return oobAppURL
  **/
  @Schema(description = "")
  public String getOobAppURL() {
    return oobAppURL;
  }

  public void setOobAppURL(String oobAppURL) {
    this.oobAppURL = oobAppURL;
  }

  public CResInfo oobContinueLabel(String oobContinueLabel) {
    this.oobContinueLabel = oobContinueLabel;
    return this;
  }

   /**
   * Get oobContinueLabel
   * @return oobContinueLabel
  **/
  @Schema(description = "")
  public String getOobContinueLabel() {
    return oobContinueLabel;
  }

  public void setOobContinueLabel(String oobContinueLabel) {
    this.oobContinueLabel = oobContinueLabel;
  }

  public CResInfo psImage(ThreeDSImage psImage) {
    this.psImage = psImage;
    return this;
  }

   /**
   * Get psImage
   * @return psImage
  **/
  @Schema(description = "")
  public ThreeDSImage getPsImage() {
    return psImage;
  }

  public void setPsImage(ThreeDSImage psImage) {
    this.psImage = psImage;
  }

  public CResInfo resendInformationLabel(String resendInformationLabel) {
    this.resendInformationLabel = resendInformationLabel;
    return this;
  }

   /**
   * Get resendInformationLabel
   * @return resendInformationLabel
  **/
  @Schema(description = "")
  public String getResendInformationLabel() {
    return resendInformationLabel;
  }

  public void setResendInformationLabel(String resendInformationLabel) {
    this.resendInformationLabel = resendInformationLabel;
  }

  public CResInfo submitAuthenticationLabel(String submitAuthenticationLabel) {
    this.submitAuthenticationLabel = submitAuthenticationLabel;
    return this;
  }

   /**
   * Get submitAuthenticationLabel
   * @return submitAuthenticationLabel
  **/
  @Schema(description = "")
  public String getSubmitAuthenticationLabel() {
    return submitAuthenticationLabel;
  }

  public void setSubmitAuthenticationLabel(String submitAuthenticationLabel) {
    this.submitAuthenticationLabel = submitAuthenticationLabel;
  }

  public CResInfo transStatus(String transStatus) {
    this.transStatus = transStatus;
    return this;
  }

   /**
   * Get transStatus
   * @return transStatus
  **/
  @Schema(description = "")
  public String getTransStatus() {
    return transStatus;
  }

  public void setTransStatus(String transStatus) {
    this.transStatus = transStatus;
  }

  public CResInfo whitelistingInfoText(String whitelistingInfoText) {
    this.whitelistingInfoText = whitelistingInfoText;
    return this;
  }

   /**
   * Get whitelistingInfoText
   * @return whitelistingInfoText
  **/
  @Schema(description = "")
  public String getWhitelistingInfoText() {
    return whitelistingInfoText;
  }

  public void setWhitelistingInfoText(String whitelistingInfoText) {
    this.whitelistingInfoText = whitelistingInfoText;
  }

  public CResInfo whyInfoLabel(String whyInfoLabel) {
    this.whyInfoLabel = whyInfoLabel;
    return this;
  }

   /**
   * Get whyInfoLabel
   * @return whyInfoLabel
  **/
  @Schema(description = "")
  public String getWhyInfoLabel() {
    return whyInfoLabel;
  }

  public void setWhyInfoLabel(String whyInfoLabel) {
    this.whyInfoLabel = whyInfoLabel;
  }

  public CResInfo whyInfoText(String whyInfoText) {
    this.whyInfoText = whyInfoText;
    return this;
  }

   /**
   * Get whyInfoText
   * @return whyInfoText
  **/
  @Schema(description = "")
  public String getWhyInfoText() {
    return whyInfoText;
  }

  public void setWhyInfoText(String whyInfoText) {
    this.whyInfoText = whyInfoText;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CResInfo cresInfo = (CResInfo) o;
    return Objects.equals(this.acsHTML, cresInfo.acsHTML) &&
        Objects.equals(this.acsUiType, cresInfo.acsUiType) &&
        Objects.equals(this.challengeAddInfo, cresInfo.challengeAddInfo) &&
        Objects.equals(this.challengeCompletionInd, cresInfo.challengeCompletionInd) &&
        Objects.equals(this.challengeInfoHeader, cresInfo.challengeInfoHeader) &&
        Objects.equals(this.challengeInfoLabel, cresInfo.challengeInfoLabel) &&
        Objects.equals(this.challengeInfoText, cresInfo.challengeInfoText) &&
        Objects.equals(this.challengeInfoTextIndicator, cresInfo.challengeInfoTextIndicator) &&
        Objects.equals(this.challengeSelectInfo, cresInfo.challengeSelectInfo) &&
        Objects.equals(this.expandInfoLabel, cresInfo.expandInfoLabel) &&
        Objects.equals(this.expandInfoText, cresInfo.expandInfoText) &&
        Objects.equals(this.issuerImage, cresInfo.issuerImage) &&
        Objects.equals(this.oobAppLabel, cresInfo.oobAppLabel) &&
        Objects.equals(this.oobAppURL, cresInfo.oobAppURL) &&
        Objects.equals(this.oobContinueLabel, cresInfo.oobContinueLabel) &&
        Objects.equals(this.psImage, cresInfo.psImage) &&
        Objects.equals(this.resendInformationLabel, cresInfo.resendInformationLabel) &&
        Objects.equals(this.submitAuthenticationLabel, cresInfo.submitAuthenticationLabel) &&
        Objects.equals(this.transStatus, cresInfo.transStatus) &&
        Objects.equals(this.whitelistingInfoText, cresInfo.whitelistingInfoText) &&
        Objects.equals(this.whyInfoLabel, cresInfo.whyInfoLabel) &&
        Objects.equals(this.whyInfoText, cresInfo.whyInfoText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acsHTML, acsUiType, challengeAddInfo, challengeCompletionInd, challengeInfoHeader, challengeInfoLabel, challengeInfoText, challengeInfoTextIndicator, challengeSelectInfo, expandInfoLabel, expandInfoText, issuerImage, oobAppLabel, oobAppURL, oobContinueLabel, psImage, resendInformationLabel, submitAuthenticationLabel, transStatus, whitelistingInfoText, whyInfoLabel, whyInfoText);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CResInfo {\n");
    
    sb.append("    acsHTML: ").append(toIndentedString(acsHTML)).append("\n");
    sb.append("    acsUiType: ").append(toIndentedString(acsUiType)).append("\n");
    sb.append("    challengeAddInfo: ").append(toIndentedString(challengeAddInfo)).append("\n");
    sb.append("    challengeCompletionInd: ").append(toIndentedString(challengeCompletionInd)).append("\n");
    sb.append("    challengeInfoHeader: ").append(toIndentedString(challengeInfoHeader)).append("\n");
    sb.append("    challengeInfoLabel: ").append(toIndentedString(challengeInfoLabel)).append("\n");
    sb.append("    challengeInfoText: ").append(toIndentedString(challengeInfoText)).append("\n");
    sb.append("    challengeInfoTextIndicator: ").append(toIndentedString(challengeInfoTextIndicator)).append("\n");
    sb.append("    challengeSelectInfo: ").append(toIndentedString(challengeSelectInfo)).append("\n");
    sb.append("    expandInfoLabel: ").append(toIndentedString(expandInfoLabel)).append("\n");
    sb.append("    expandInfoText: ").append(toIndentedString(expandInfoText)).append("\n");
    sb.append("    issuerImage: ").append(toIndentedString(issuerImage)).append("\n");
    sb.append("    oobAppLabel: ").append(toIndentedString(oobAppLabel)).append("\n");
    sb.append("    oobAppURL: ").append(toIndentedString(oobAppURL)).append("\n");
    sb.append("    oobContinueLabel: ").append(toIndentedString(oobContinueLabel)).append("\n");
    sb.append("    psImage: ").append(toIndentedString(psImage)).append("\n");
    sb.append("    resendInformationLabel: ").append(toIndentedString(resendInformationLabel)).append("\n");
    sb.append("    submitAuthenticationLabel: ").append(toIndentedString(submitAuthenticationLabel)).append("\n");
    sb.append("    transStatus: ").append(toIndentedString(transStatus)).append("\n");
    sb.append("    whitelistingInfoText: ").append(toIndentedString(whitelistingInfoText)).append("\n");
    sb.append("    whyInfoLabel: ").append(toIndentedString(whyInfoLabel)).append("\n");
    sb.append("    whyInfoText: ").append(toIndentedString(whyInfoText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
