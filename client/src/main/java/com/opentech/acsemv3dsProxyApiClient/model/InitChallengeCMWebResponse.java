/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.opentech.acsemv3dsProxyApiClient.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.opentech.acsemv3dsProxyApiClient.model.AppChallengeInfo;
import com.opentech.acsemv3dsProxyApiClient.model.BrowserChallengeInfo;
import com.opentech.acsemv3dsProxyApiClient.model.CResInfo;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * InitChallengeCMWebResponse
 */

public class InitChallengeCMWebResponse {
  @JsonProperty("appNextChallengeInfo")
  private AppChallengeInfo appNextChallengeInfo = null;

  @JsonProperty("browserNextChallengeInfo")
  private BrowserChallengeInfo browserNextChallengeInfo = null;

  @JsonProperty("cResInfo")
  private CResInfo cResInfo = null;

  @JsonProperty("currentStepId")
  private String currentStepId = null;

  public InitChallengeCMWebResponse appNextChallengeInfo(AppChallengeInfo appNextChallengeInfo) {
    this.appNextChallengeInfo = appNextChallengeInfo;
    return this;
  }

   /**
   * Get appNextChallengeInfo
   * @return appNextChallengeInfo
  **/
  @ApiModelProperty(value = "")
  public AppChallengeInfo getAppNextChallengeInfo() {
    return appNextChallengeInfo;
  }

  public void setAppNextChallengeInfo(AppChallengeInfo appNextChallengeInfo) {
    this.appNextChallengeInfo = appNextChallengeInfo;
  }

  public InitChallengeCMWebResponse browserNextChallengeInfo(BrowserChallengeInfo browserNextChallengeInfo) {
    this.browserNextChallengeInfo = browserNextChallengeInfo;
    return this;
  }

   /**
   * Get browserNextChallengeInfo
   * @return browserNextChallengeInfo
  **/
  @ApiModelProperty(value = "")
  public BrowserChallengeInfo getBrowserNextChallengeInfo() {
    return browserNextChallengeInfo;
  }

  public void setBrowserNextChallengeInfo(BrowserChallengeInfo browserNextChallengeInfo) {
    this.browserNextChallengeInfo = browserNextChallengeInfo;
  }

  public InitChallengeCMWebResponse cResInfo(CResInfo cResInfo) {
    this.cResInfo = cResInfo;
    return this;
  }

   /**
   * Get cResInfo
   * @return cResInfo
  **/
  @ApiModelProperty(value = "")
  public CResInfo getCResInfo() {
    return cResInfo;
  }

  public void setCResInfo(CResInfo cResInfo) {
    this.cResInfo = cResInfo;
  }

  public InitChallengeCMWebResponse currentStepId(String currentStepId) {
    this.currentStepId = currentStepId;
    return this;
  }

   /**
   * Get currentStepId
   * @return currentStepId
  **/
  @ApiModelProperty(value = "")
  public String getCurrentStepId() {
    return currentStepId;
  }

  public void setCurrentStepId(String currentStepId) {
    this.currentStepId = currentStepId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InitChallengeCMWebResponse initChallengeCMWebResponse = (InitChallengeCMWebResponse) o;
    return Objects.equals(this.appNextChallengeInfo, initChallengeCMWebResponse.appNextChallengeInfo) &&
        Objects.equals(this.browserNextChallengeInfo, initChallengeCMWebResponse.browserNextChallengeInfo) &&
        Objects.equals(this.cResInfo, initChallengeCMWebResponse.cResInfo) &&
        Objects.equals(this.currentStepId, initChallengeCMWebResponse.currentStepId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appNextChallengeInfo, browserNextChallengeInfo, cResInfo, currentStepId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InitChallengeCMWebResponse {\n");
    
    sb.append("    appNextChallengeInfo: ").append(toIndentedString(appNextChallengeInfo)).append("\n");
    sb.append("    browserNextChallengeInfo: ").append(toIndentedString(browserNextChallengeInfo)).append("\n");
    sb.append("    cResInfo: ").append(toIndentedString(cResInfo)).append("\n");
    sb.append("    currentStepId: ").append(toIndentedString(currentStepId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

