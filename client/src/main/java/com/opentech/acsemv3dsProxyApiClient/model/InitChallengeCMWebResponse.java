/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.opentech.acsemv3dsProxyApiClient.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * InitChallengeCMWebResponse
 */

public class InitChallengeCMWebResponse {
  @JsonProperty("browserChallengeInfo")
  private List<String> browserChallengeInfo = null;

  @JsonProperty("cResInfo")
  private Map<String, String> cResInfo = null;

  @JsonProperty("currentStepId")
  private String currentStepId = null;

  @JsonProperty("htmlPage")
  private String htmlPage = null;

  public InitChallengeCMWebResponse browserChallengeInfo(List<String> browserChallengeInfo) {
    this.browserChallengeInfo = browserChallengeInfo;
    return this;
  }

  public InitChallengeCMWebResponse addBrowserChallengeInfoItem(String browserChallengeInfoItem) {
    if (this.browserChallengeInfo == null) {
      this.browserChallengeInfo = new ArrayList<String>();
    }
    this.browserChallengeInfo.add(browserChallengeInfoItem);
    return this;
  }

   /**
   * Get browserChallengeInfo
   * @return browserChallengeInfo
  **/
  @ApiModelProperty(value = "")
  public List<String> getBrowserChallengeInfo() {
    return browserChallengeInfo;
  }

  public void setBrowserChallengeInfo(List<String> browserChallengeInfo) {
    this.browserChallengeInfo = browserChallengeInfo;
  }

  public InitChallengeCMWebResponse cResInfo(Map<String, String> cResInfo) {
    this.cResInfo = cResInfo;
    return this;
  }

  public InitChallengeCMWebResponse putCResInfoItem(String key, String cResInfoItem) {
    if (this.cResInfo == null) {
      this.cResInfo = new HashMap<String, String>();
    }
    this.cResInfo.put(key, cResInfoItem);
    return this;
  }

   /**
   * Get cResInfo
   * @return cResInfo
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getCResInfo() {
    return cResInfo;
  }

  public void setCResInfo(Map<String, String> cResInfo) {
    this.cResInfo = cResInfo;
  }

  public InitChallengeCMWebResponse currentStepId(String currentStepId) {
    this.currentStepId = currentStepId;
    return this;
  }

   /**
   * Get currentStepId
   * @return currentStepId
  **/
  @ApiModelProperty(value = "")
  public String getCurrentStepId() {
    return currentStepId;
  }

  public void setCurrentStepId(String currentStepId) {
    this.currentStepId = currentStepId;
  }

  public InitChallengeCMWebResponse htmlPage(String htmlPage) {
    this.htmlPage = htmlPage;
    return this;
  }

   /**
   * Get htmlPage
   * @return htmlPage
  **/
  @ApiModelProperty(value = "")
  public String getHtmlPage() {
    return htmlPage;
  }

  public void setHtmlPage(String htmlPage) {
    this.htmlPage = htmlPage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InitChallengeCMWebResponse initChallengeCMWebResponse = (InitChallengeCMWebResponse) o;
    return Objects.equals(this.browserChallengeInfo, initChallengeCMWebResponse.browserChallengeInfo) &&
        Objects.equals(this.cResInfo, initChallengeCMWebResponse.cResInfo) &&
        Objects.equals(this.currentStepId, initChallengeCMWebResponse.currentStepId) &&
        Objects.equals(this.htmlPage, initChallengeCMWebResponse.htmlPage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(browserChallengeInfo, cResInfo, currentStepId, htmlPage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InitChallengeCMWebResponse {\n");
    
    sb.append("    browserChallengeInfo: ").append(toIndentedString(browserChallengeInfo)).append("\n");
    sb.append("    cResInfo: ").append(toIndentedString(cResInfo)).append("\n");
    sb.append("    currentStepId: ").append(toIndentedString(currentStepId)).append("\n");
    sb.append("    htmlPage: ").append(toIndentedString(htmlPage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

