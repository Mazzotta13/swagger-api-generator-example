/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.opentech.acsemv3dsProxyApiClient.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.opentech.acsemv3dsProxyApiClient.model.AReq;
import com.opentech.acsemv3dsProxyApiClient.model.BrowserInfo;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * IsChallengeSupportedWebRequest
 */

public class IsChallengeSupportedWebRequest {
  @JsonProperty("aReq")
  private AReq aReq = null;

  @JsonProperty("authenticationName")
  private String authenticationName = null;

  /**
   * Gets or Sets authenticationType
   */
  public enum AuthenticationTypeEnum {
    STATIC("STATIC"),
    
    DYNAMIC("DYNAMIC"),
    
    OOB("OOB"),
    
    DECOUPLED("DECOUPLED");

    private String value;

    AuthenticationTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AuthenticationTypeEnum fromValue(String text) {
      for (AuthenticationTypeEnum b : AuthenticationTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("authenticationType")
  private AuthenticationTypeEnum authenticationType = null;

  @JsonProperty("browserInfo")
  private BrowserInfo browserInfo = null;

  @JsonProperty("decoupledSupported")
  private Boolean decoupledSupported = null;

  @JsonProperty("transactionLanguage")
  private String transactionLanguage = null;

  public IsChallengeSupportedWebRequest aReq(AReq aReq) {
    this.aReq = aReq;
    return this;
  }

   /**
   * Get aReq
   * @return aReq
  **/
  @ApiModelProperty(value = "")
  public AReq getAReq() {
    return aReq;
  }

  public void setAReq(AReq aReq) {
    this.aReq = aReq;
  }

  public IsChallengeSupportedWebRequest authenticationName(String authenticationName) {
    this.authenticationName = authenticationName;
    return this;
  }

   /**
   * Get authenticationName
   * @return authenticationName
  **/
  @ApiModelProperty(value = "")
  public String getAuthenticationName() {
    return authenticationName;
  }

  public void setAuthenticationName(String authenticationName) {
    this.authenticationName = authenticationName;
  }

  public IsChallengeSupportedWebRequest authenticationType(AuthenticationTypeEnum authenticationType) {
    this.authenticationType = authenticationType;
    return this;
  }

   /**
   * Get authenticationType
   * @return authenticationType
  **/
  @ApiModelProperty(value = "")
  public AuthenticationTypeEnum getAuthenticationType() {
    return authenticationType;
  }

  public void setAuthenticationType(AuthenticationTypeEnum authenticationType) {
    this.authenticationType = authenticationType;
  }

  public IsChallengeSupportedWebRequest browserInfo(BrowserInfo browserInfo) {
    this.browserInfo = browserInfo;
    return this;
  }

   /**
   * Get browserInfo
   * @return browserInfo
  **/
  @ApiModelProperty(value = "")
  public BrowserInfo getBrowserInfo() {
    return browserInfo;
  }

  public void setBrowserInfo(BrowserInfo browserInfo) {
    this.browserInfo = browserInfo;
  }

  public IsChallengeSupportedWebRequest decoupledSupported(Boolean decoupledSupported) {
    this.decoupledSupported = decoupledSupported;
    return this;
  }

   /**
   * Get decoupledSupported
   * @return decoupledSupported
  **/
  @ApiModelProperty(value = "")
  public Boolean isDecoupledSupported() {
    return decoupledSupported;
  }

  public void setDecoupledSupported(Boolean decoupledSupported) {
    this.decoupledSupported = decoupledSupported;
  }

  public IsChallengeSupportedWebRequest transactionLanguage(String transactionLanguage) {
    this.transactionLanguage = transactionLanguage;
    return this;
  }

   /**
   * Get transactionLanguage
   * @return transactionLanguage
  **/
  @ApiModelProperty(value = "")
  public String getTransactionLanguage() {
    return transactionLanguage;
  }

  public void setTransactionLanguage(String transactionLanguage) {
    this.transactionLanguage = transactionLanguage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IsChallengeSupportedWebRequest isChallengeSupportedWebRequest = (IsChallengeSupportedWebRequest) o;
    return Objects.equals(this.aReq, isChallengeSupportedWebRequest.aReq) &&
        Objects.equals(this.authenticationName, isChallengeSupportedWebRequest.authenticationName) &&
        Objects.equals(this.authenticationType, isChallengeSupportedWebRequest.authenticationType) &&
        Objects.equals(this.browserInfo, isChallengeSupportedWebRequest.browserInfo) &&
        Objects.equals(this.decoupledSupported, isChallengeSupportedWebRequest.decoupledSupported) &&
        Objects.equals(this.transactionLanguage, isChallengeSupportedWebRequest.transactionLanguage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aReq, authenticationName, authenticationType, browserInfo, decoupledSupported, transactionLanguage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IsChallengeSupportedWebRequest {\n");
    
    sb.append("    aReq: ").append(toIndentedString(aReq)).append("\n");
    sb.append("    authenticationName: ").append(toIndentedString(authenticationName)).append("\n");
    sb.append("    authenticationType: ").append(toIndentedString(authenticationType)).append("\n");
    sb.append("    browserInfo: ").append(toIndentedString(browserInfo)).append("\n");
    sb.append("    decoupledSupported: ").append(toIndentedString(decoupledSupported)).append("\n");
    sb.append("    transactionLanguage: ").append(toIndentedString(transactionLanguage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

