/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.opentech.acsemv3dsProxyApiClient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.opentech.acsemv3dsProxyApiClient.model.ThreeDSAcsRenderingType;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * IsChallengeSupportedWebResponse
 */


public class IsChallengeSupportedWebResponse {
  @JsonProperty("acsMaxChallenges")
  private Integer acsMaxChallenges = null;

  @JsonProperty("challengeSupported")
  private Boolean challengeSupported = null;

  @JsonProperty("performDecoupledAuthentication")
  private Boolean performDecoupledAuthentication = null;

  @JsonProperty("threeDSAcsRenderingType")
  private ThreeDSAcsRenderingType threeDSAcsRenderingType = null;

  public IsChallengeSupportedWebResponse acsMaxChallenges(Integer acsMaxChallenges) {
    this.acsMaxChallenges = acsMaxChallenges;
    return this;
  }

   /**
   * Get acsMaxChallenges
   * @return acsMaxChallenges
  **/
  @Schema(description = "")
  public Integer getAcsMaxChallenges() {
    return acsMaxChallenges;
  }

  public void setAcsMaxChallenges(Integer acsMaxChallenges) {
    this.acsMaxChallenges = acsMaxChallenges;
  }

  public IsChallengeSupportedWebResponse challengeSupported(Boolean challengeSupported) {
    this.challengeSupported = challengeSupported;
    return this;
  }

   /**
   * Get challengeSupported
   * @return challengeSupported
  **/
  @Schema(description = "")
  public Boolean isChallengeSupported() {
    return challengeSupported;
  }

  public void setChallengeSupported(Boolean challengeSupported) {
    this.challengeSupported = challengeSupported;
  }

  public IsChallengeSupportedWebResponse performDecoupledAuthentication(Boolean performDecoupledAuthentication) {
    this.performDecoupledAuthentication = performDecoupledAuthentication;
    return this;
  }

   /**
   * Get performDecoupledAuthentication
   * @return performDecoupledAuthentication
  **/
  @Schema(description = "")
  public Boolean isPerformDecoupledAuthentication() {
    return performDecoupledAuthentication;
  }

  public void setPerformDecoupledAuthentication(Boolean performDecoupledAuthentication) {
    this.performDecoupledAuthentication = performDecoupledAuthentication;
  }

  public IsChallengeSupportedWebResponse threeDSAcsRenderingType(ThreeDSAcsRenderingType threeDSAcsRenderingType) {
    this.threeDSAcsRenderingType = threeDSAcsRenderingType;
    return this;
  }

   /**
   * Get threeDSAcsRenderingType
   * @return threeDSAcsRenderingType
  **/
  @Schema(description = "")
  public ThreeDSAcsRenderingType getThreeDSAcsRenderingType() {
    return threeDSAcsRenderingType;
  }

  public void setThreeDSAcsRenderingType(ThreeDSAcsRenderingType threeDSAcsRenderingType) {
    this.threeDSAcsRenderingType = threeDSAcsRenderingType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IsChallengeSupportedWebResponse isChallengeSupportedWebResponse = (IsChallengeSupportedWebResponse) o;
    return Objects.equals(this.acsMaxChallenges, isChallengeSupportedWebResponse.acsMaxChallenges) &&
        Objects.equals(this.challengeSupported, isChallengeSupportedWebResponse.challengeSupported) &&
        Objects.equals(this.performDecoupledAuthentication, isChallengeSupportedWebResponse.performDecoupledAuthentication) &&
        Objects.equals(this.threeDSAcsRenderingType, isChallengeSupportedWebResponse.threeDSAcsRenderingType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acsMaxChallenges, challengeSupported, performDecoupledAuthentication, threeDSAcsRenderingType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IsChallengeSupportedWebResponse {\n");
    
    sb.append("    acsMaxChallenges: ").append(toIndentedString(acsMaxChallenges)).append("\n");
    sb.append("    challengeSupported: ").append(toIndentedString(challengeSupported)).append("\n");
    sb.append("    performDecoupledAuthentication: ").append(toIndentedString(performDecoupledAuthentication)).append("\n");
    sb.append("    threeDSAcsRenderingType: ").append(toIndentedString(threeDSAcsRenderingType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
