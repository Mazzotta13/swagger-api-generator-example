/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.opentech.acsemv3dsProxyApiClient.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * EvaluateChallengeStepCMWebResponse
 */

public class EvaluateChallengeStepCMWebResponse {
  @JsonProperty("browserChallengeInfo")
  private List<String> browserChallengeInfo = null;

  @JsonProperty("cResInfo")
  private Map<String, String> cResInfo = null;

  /**
   * Gets or Sets challengeStatus
   */
  public enum ChallengeStatusEnum {
    ONGOING_NAME_ONGOING_ORDINAL_0_("ChallengeStatus{value=ONGOING, name=ONGOING, ordinal=0}"),
    
    TERMINATED_WITH_SUCCESS_NAME_TERMINATED_WITH_SUCCESS_ORDINAL_1_("ChallengeStatus{value=TERMINATED_WITH_SUCCESS, name=TERMINATED_WITH_SUCCESS, ordinal=1}"),
    
    TERMINATED_WITH_FAILURE_NAME_TERMINATED_WITH_FAILURE_ORDINAL_2_("ChallengeStatus{value=TERMINATED_WITH_FAILURE, name=TERMINATED_WITH_FAILURE, ordinal=2}");

    private String value;

    ChallengeStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChallengeStatusEnum fromValue(String text) {
      for (ChallengeStatusEnum b : ChallengeStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("challengeStatus")
  private ChallengeStatusEnum challengeStatus = null;

  @JsonProperty("htmlPage")
  private String htmlPage = null;

  @JsonProperty("nextStepId")
  private String nextStepId = null;

  public EvaluateChallengeStepCMWebResponse browserChallengeInfo(List<String> browserChallengeInfo) {
    this.browserChallengeInfo = browserChallengeInfo;
    return this;
  }

  public EvaluateChallengeStepCMWebResponse addBrowserChallengeInfoItem(String browserChallengeInfoItem) {
    if (this.browserChallengeInfo == null) {
      this.browserChallengeInfo = new ArrayList<String>();
    }
    this.browserChallengeInfo.add(browserChallengeInfoItem);
    return this;
  }

   /**
   * Get browserChallengeInfo
   * @return browserChallengeInfo
  **/
  @ApiModelProperty(value = "")
  public List<String> getBrowserChallengeInfo() {
    return browserChallengeInfo;
  }

  public void setBrowserChallengeInfo(List<String> browserChallengeInfo) {
    this.browserChallengeInfo = browserChallengeInfo;
  }

  public EvaluateChallengeStepCMWebResponse cResInfo(Map<String, String> cResInfo) {
    this.cResInfo = cResInfo;
    return this;
  }

  public EvaluateChallengeStepCMWebResponse putCResInfoItem(String key, String cResInfoItem) {
    if (this.cResInfo == null) {
      this.cResInfo = new HashMap<String, String>();
    }
    this.cResInfo.put(key, cResInfoItem);
    return this;
  }

   /**
   * Get cResInfo
   * @return cResInfo
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getCResInfo() {
    return cResInfo;
  }

  public void setCResInfo(Map<String, String> cResInfo) {
    this.cResInfo = cResInfo;
  }

  public EvaluateChallengeStepCMWebResponse challengeStatus(ChallengeStatusEnum challengeStatus) {
    this.challengeStatus = challengeStatus;
    return this;
  }

   /**
   * Get challengeStatus
   * @return challengeStatus
  **/
  @ApiModelProperty(value = "")
  public ChallengeStatusEnum getChallengeStatus() {
    return challengeStatus;
  }

  public void setChallengeStatus(ChallengeStatusEnum challengeStatus) {
    this.challengeStatus = challengeStatus;
  }

  public EvaluateChallengeStepCMWebResponse htmlPage(String htmlPage) {
    this.htmlPage = htmlPage;
    return this;
  }

   /**
   * Get htmlPage
   * @return htmlPage
  **/
  @ApiModelProperty(value = "")
  public String getHtmlPage() {
    return htmlPage;
  }

  public void setHtmlPage(String htmlPage) {
    this.htmlPage = htmlPage;
  }

  public EvaluateChallengeStepCMWebResponse nextStepId(String nextStepId) {
    this.nextStepId = nextStepId;
    return this;
  }

   /**
   * Get nextStepId
   * @return nextStepId
  **/
  @ApiModelProperty(value = "")
  public String getNextStepId() {
    return nextStepId;
  }

  public void setNextStepId(String nextStepId) {
    this.nextStepId = nextStepId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EvaluateChallengeStepCMWebResponse evaluateChallengeStepCMWebResponse = (EvaluateChallengeStepCMWebResponse) o;
    return Objects.equals(this.browserChallengeInfo, evaluateChallengeStepCMWebResponse.browserChallengeInfo) &&
        Objects.equals(this.cResInfo, evaluateChallengeStepCMWebResponse.cResInfo) &&
        Objects.equals(this.challengeStatus, evaluateChallengeStepCMWebResponse.challengeStatus) &&
        Objects.equals(this.htmlPage, evaluateChallengeStepCMWebResponse.htmlPage) &&
        Objects.equals(this.nextStepId, evaluateChallengeStepCMWebResponse.nextStepId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(browserChallengeInfo, cResInfo, challengeStatus, htmlPage, nextStepId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EvaluateChallengeStepCMWebResponse {\n");
    
    sb.append("    browserChallengeInfo: ").append(toIndentedString(browserChallengeInfo)).append("\n");
    sb.append("    cResInfo: ").append(toIndentedString(cResInfo)).append("\n");
    sb.append("    challengeStatus: ").append(toIndentedString(challengeStatus)).append("\n");
    sb.append("    htmlPage: ").append(toIndentedString(htmlPage)).append("\n");
    sb.append("    nextStepId: ").append(toIndentedString(nextStepId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

